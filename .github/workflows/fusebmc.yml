name: FuSeBMC Analysis

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.MY_GITHUB_PAT }}

    - name: Pull FuSeBMC Docker image
      run: docker pull ghcr.io/fusebmc/fusebmc-ai:build_system

    - name: Install xmllint
      run: sudo apt-get update && sudo apt-get install -y libxml2-utils

    - name: Run FuSeBMC and Extract Outputs
      id: run-fusebmc
      run: |
        docker run --name fusebmc-container --entrypoint /bin/bash -v ${{ github.workspace }}:/workspace ghcr.io/fusebmc/fusebmc-ai:build_system -c "for file in ${{ steps.changed-files.outputs.files }}; do ./fusebmc.bin --ai --verification -a 64 -s incr /workspace/$file; done" > fusebmc_output.log 2>&1
        docker cp fusebmc-container:/workspace/fusebmc_output ./fusebmc_output
        docker rm fusebmc-container

    - name: Analyze FuSeBMC Results
      id: analyze-results
      run: |
        echo "## FuSeBMC Analysis Results" > results.md
        echo "### Summary" >> results.md
        echo "| File | Status |" >> results.md
        echo "|------|--------|" >> results.md
        vulnerabilities_found=false
        
        for file in ${{ steps.changed-files.outputs.files }}; do
          file_base=$(basename "$file")
          output_dir=$(find ./fusebmc_output -type d -name "${file_base}_*")

          if [ -d "$output_dir" ]; then
            solution_file="$output_dir/solution/correct.c"
            if [ -f "$solution_file" ]; then
              corrected_code=$(cat "$solution_file")
              echo "| $file | ❌ Failed |" >> results.md
              vulnerabilities_found=true
              
              echo "" >> results.md
              echo "### $file" >> results.md
              echo "#### Corrected Code:" >> results.md
              echo '```c' >> results.md
              echo "$corrected_code" >> results.md
              echo '```' >> results.md
              
              # Replace the original file with the corrected code
              echo "$corrected_code" > "$file"
            else
              echo "| $file | ✅ Passed |" >> results.md
            fi

            # Process graphml files for violation witnesses
            for graphml_file in $(find "$output_dir/fusebmc_instrument_output" -name "*.graphml" ! -name "veri_1.graphml" ! -name "veri_2.graphml"); do
              if grep -q "<data key=\"violation\">" "$graphml_file"; then
                echo "Violation found in $graphml_file"
                echo "#### Violation Details from $graphml_file:" >> results.md

                # Extract specific details from the graphml
                line_number=$(xmllint --xpath 'string(//edge[data[@key="violation"]]/data[@key="startline"])' "$graphml_file")

                # Extract the violation description from stdout
                description=$(grep -A 5 "VERIFICATION FAILED" fusebmc_output.log | grep -B 5 "line $line_number" | head -1)
                
                echo "- Line $line_number: $description" >> results.md

                # Pinpoint the exact part of the code
                code_snippet=$(awk "NR==$line_number{print;exit}" $file)
                echo '```c' >> results.md
                echo "$code_snippet" >> results.md
                echo '```' >> results.md
                vulnerabilities_found=true
              fi
            done
            echo "" >> results.md
          fi
        done
        echo "vulnerabilities_found=$vulnerabilities_found" >> $GITHUB_OUTPUT

    - name: Upload results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: fusebmc-results
        path: results.md

    - name: Create Pull Request
      if: steps.analyze-results.outputs.vulnerabilities_found == 'true'
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: Apply FuSeBMC corrections
        title: '[FuSeBMC] Apply corrections'
        body: |
          This pull request applies corrections from FuSeBMC analysis.
          The corrected code has replaced the original code in the relevant files.
          
          Please review the changes carefully before merging.
        branch: fusebmc-corrections
        delete-branch: true
        base: ${{ github.ref_name }}

    - name: Fail if vulnerabilities found
      if: steps.analyze-results.outputs.vulnerabilities_found == 'true'
      run: |
        echo "Vulnerabilities were found. Pipeline failed."
        exit 1
