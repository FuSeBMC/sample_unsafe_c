name: FuSeBMC Analysis
on:
  pull_request:
  workflow_dispatch:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install dependencies
      run: |
        pip install -r .github/scripts/Requirements.txt

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.MY_GITHUB_PAT }}

    - name: Pull FuSeBMC Docker image
      run: docker pull ghcr.io/fusebmc/fusebmc-ai:run-ESBMC-individual-property

    - name: Run privileged command
      run: |
        sudo sh -c 'echo core > /proc/sys/kernel/core_pattern'

    - name: Get changed files
      id: changed-files
      run: |
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          git fetch origin ${{ github.base_ref }}
          changed_files=$(git diff --name-only --diff-filter=ACMRT origin/${{ github.base_ref }} ${{ github.sha }} | grep -E '\.c$|\.i$' || true)
        elif [ "${{ github.event_name }}" == "push" ]; then
          if git rev-parse --verizfy HEAD^1 >/dev/null 2>&1; then
            changed_files=$(git diff --name-only --diff-filter=ACMRT HEAD^1 HEAD | grep -E '\.c$|\.i$' || true)
          else
            changed_files=$(git ls-tree -r --name-only HEAD | grep -E '\.c$|\.i$' || true)
          fi
        else
          changed_files=$(git ls-tree -r --name-only HEAD | grep -E '\.c$|\.i$' || true)
        fi
        echo "Changed files: $changed_files"
        echo "files=$changed_files" >> $GITHUB_OUTPUT

    - name: Run FuSeBMC on changed C files
      id: fusebmc-analysis
      run: |
        vulnerabilities_found=false
        for file in ${{ steps.changed-files.outputs.files }}; do
          if [ -f "$file" ]; then
            echo "Processing file: $file"
           
            # Run FuSeBMC and capture the output
            output=$(docker run \
              --name fusebmc_container \
              -v ${{ github.workspace }}:/workspace \
              ghcr.io/fusebmc/fusebmc-ai:run-ESBMC-individual-property \
              --ESBMC_Multirun --ai --verification -a 64 -s incr /workspace/$file)
           
            # Copy the output from the container to the workspace
            docker cp fusebmc_container:/fusebmc_output ${{ github.workspace }}/fusebmc_output
           
            # Remove the container
            docker rm fusebmc_container

            file_name=$(basename "$file")
            output_dir=$(find ${{ github.workspace }}/fusebmc_output -type d -name "${file_name}_*" | head -n 1)
           
            # Analyze GraphML files for violation witnesses
            for graphml in $output_dir/fusebmc_instrument_output/*.graphml; do
              echo "Checking GraphML file: $graphml"
              if [ -f "$graphml" ] && [[ $graphml != *"veri_1.graphml" && $graphml != *"veri_2.graphml" ]]; then
                if grep -q '<data key="violation">true</data>' "$graphml"; then
                  echo "Violation found in the following GraphML file: $graphml"
                  vulnerabilities_found=true
                fi
              fi
            done
            python3 .github/scripts/Make_Sarif.py $output_dir/fusebmc_instrument_output
            cat $output_dir/fusebmc_instrument_output/*.sarif
          fi
        done
        echo "vulnerabilities_found=$vulnerabilities_found" >> $GITHUB_OUTPUT
        find .

    - name: Find SARIF files
      id: find-sarif
      run: |
        sarif_files=$(find ${{ github.workspace }}/fusebmc_output -name '*.sarif' -print0 | tr '\0' '\n')
        echo "Found SARIF files: $sarif_files"
        echo "sarif_files=$sarif_files" >> $GITHUB_ENV


    - name: Upload SARIF results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: ${{ env.sarif_files }}

    - name: Upload results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: fusebmc-results
        path: results.md

    - name: Create Pull Request
      if: steps.fusebmc-analysis.outputs.vulnerabilities_found == 'true'
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: Apply FuSeBMC corrections
        title: '[FuSeBMC] Apply corrections'
        body: |
          This pull request applies corrections from FuSeBMC analysis.
          Vulnerabilities were detected. Please review the attached results.
         
          The corrected code has replaced the original code in the relevant files.
         
          Please review the changes carefully before merging.
        branch: fusebmc-corrections
        delete-branch: true
        base: ${{ github.ref_name }}

    - name: Fail if vulnerabilities found
      if: steps.fusebmc-analysis.outputs.vulnerabilities_found == 'true'
      run: |
        echo "Vulnerabilities were found. Pipeline failed."
        exit 1
