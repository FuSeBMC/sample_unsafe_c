name: FuSeBMC Analysis
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.MY_GITHUB_PAT }}

    - name: Pull FuSeBMC Docker image
      run: docker pull ghcr.io/fusebmc/fusebmc-ai:build_system

    - name: Run privileged command
      run: |
        docker run --rm --privileged \
        -v /proc:/host/proc \
        --entrypoint /bin/sh \
        ghcr.io/fusebmc/fusebmc-ai:build_system \
        -c "echo core > /host/proc/sys/kernel/core_pattern"

    - name: Get changed files
      id: changed-files
      run: |
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          git fetch origin ${{ github.base_ref }}
          changed_files=$(git diff --name-only --diff-filter=ACMRT origin/${{ github.base_ref }} ${{ github.sha }} | grep -E '\.c$|\.i$' || true)
        elif [ "${{ github.event_name }}" == "push" ]; then
          if git rev-parse --verify HEAD^1 >/dev/null 2>&1; then
            changed_files=$(git diff --name-only --diff-filter=ACMRT HEAD^1 HEAD | grep -E '\.c$|\.i$' || true)
          else
            changed_files=$(git ls-tree -r --name-only HEAD | grep -E '\.c$|\.i$' || true)
          fi
        else
          changed_files=$(git ls-tree -r --name-only HEAD | grep -E '\.c$|\.i$' || true)
        fi
        echo "::set-output name=files::$changed_files"

    - name: Run FuSeBMC on changed C files
      run: |
        if [ -z "${{ steps.changed-files.outputs.files }}" ]; then
          echo "No .c or .i files were changed."
          echo "## FuSeBMC Analysis Results" > results.md
          echo "No .c or .i files were changed." >> results.md
        else
          echo "## FuSeBMC Analysis Results" > results.md
          echo "### Summary" >> results.md
          echo "| File | Status | Issues |" >> results.md
          echo "|------|--------|--------|" >> results.md
          for file in ${{ steps.changed-files.outputs.files }}; do
            if [ -f "$file" ]; then
              echo "Processing file: $file"
              echo "### Results for $file" >> results.md
              output=$(docker run --rm \
                -v ${{ github.workspace }}:/workspace \
                ghcr.io/fusebmc/fusebmc-ai:build_system \
                --ai --verification -a 64 -s incr /workspace/$file)
              echo '```' >> results.md
              echo "$output" >> results.md
              echo '```' >> results.md
              
              # Analyze output to determine if pipeline fails
              if echo "$output" | grep -q "VERIFICATION FAILED"; then
                echo "::error::Verification failed for $file"
                echo "❌ Verification failed" >> results.md
                echo "Bugs found:" >> results.md
                echo "$output" | sed -n '/\[Counterexample\]/,/VERIFICATION FAILED/p' >> results.md
                echo "| $file | ❌ Failed | Yes |" >> results.md
                
                # Extract and include corrected code in report
                corrected_code=$(echo "$output" | sed -n '/FuSeBMC-AI: Here is the corrected code, verified with ESBMC:/,/FuSeBMC-AI:/p' | sed '1d;$d')
                if [ ! -z "$corrected_code" ]; then
                  echo "#### Corrected Code Recommendation" >> results.md
                  echo '```c' >> results.md
                  echo "$corrected_code" >> results.md
                  echo '```' >> results.md
                fi
              elif echo "$output" | grep -q "VERIFICATION SUCCESSFUL"; then
                echo "✅ Verification passed" >> results.md
                echo "| $file | ✅ Passed | No |" >> results.md
              else
                echo "⚠️ Verification result unclear" >> results.md
                echo "| $file | ⚠️ Unclear | Unknown |" >> results.md
              fi
              echo "" >> results.md
            fi
          done
        fi

    - name: Check for failures
      run: |
        if grep -q "VERIFICATION FAILED" results.md; then
          exit 1
        fi

    - name: Upload results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: fusebmc-results
        path: results.md
